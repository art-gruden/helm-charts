apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "git-configmap-sync.fullname" . }}
  labels:
    {{- include "git-configmap-sync.labels" . | nindent 4 }}
data:
  entrypoint.sh: |
    #!/bin/sh
    LOCAL_SSH_DIR=/tmp/git-ssh-config
    LOCAL_SSH_KNOWN_HOSTS=$LOCAL_SSH_DIR/known_hosts
    LOCAL_GIT_CLONE_DIR=/tmp/git-clone-dir

    echo "START - Cloning repository $GIT_URL @ $GIT_BRANCH"
    
    if [ "$GIT_URL" = "${GIT_URL#git}" ]; then
      echo "> Cloning through HTTPS. Prepare authentication."
      if [ "$GIT_USERNAME" != "" ]; then
        if [ "$GIT_PASSWORD" != "" ]; then
          GIT_CREDENTIALS="$GIT_USERNAME:$GIT_PASSWORD"
        else
          GIT_CREDENTIALS="$GIT_USERNAME"
        fi

        GIT_PROTOCOL=$(echo $GIT_URL | sed -E 's/^(http|https)(:\/\/)(.+)$/\1/')
        GIT_REPO_URL=$(echo $GIT_URL | sed -E 's/^(http|https)(:\/\/)(.+)$/\3/')

        GIT_URL="$GIT_PROTOCOL://$GIT_CREDENTIALS@$GIT_REPO_URL"
      fi
    else
      echo "> Cloning through SSH. Prepare sshd config file"
      mkdir -p $LOCAL_SSH_DIR
      echo "UserKnownHostsFile $LOCAL_SSH_KNOWN_HOSTS" >> $LOCAL_SSH_DIR/config
      echo "IdentityFile $GIT_SSH_KEY" >> $LOCAL_SSH_DIR/config

      # Indicate to git to point to that file.
      export GIT_SSH_COMMAND="ssh -F $LOCAL_SSH_DIR/config"
      
      echo "> Adding SSH host to known_hosts"
      echo $GIT_URL | sed -E 's/^(http|https|git)(:\/\/|@)([^\/:]+)[\/:]([^\/:]+)\/(.+)$/\3/' | xargs ssh-keyscan > $LOCAL_SSH_KNOWN_HOSTS
    fi

    echo "> Git clone"
    git -c http.sslVerify=false clone $GIT_URL -b $GIT_BRANCH $LOCAL_GIT_CLONE_DIR

    echo "> Move folder content to shared volume"
    cp -R $LOCAL_GIT_CLONE_DIR/$GIT_SUB_DIRECTORY/* $CONFIGMAP_DIR

    echo "END - Task completed."