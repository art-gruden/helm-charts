# Default values for alertmanager-gchat-integration.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: julb/alertmanager-gchat-integration
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

alertManagerGChatIntegration:
  configToml:
    # existingSecret: name-of-existing-secret
    # origin: "custom-origin"
    # useCards: false
    rooms:
    #  - name: <room name>
    #    notificationUrl: <room-webhook-url>
  
  notificationTemplateJsonJ2: |
    {%- if labels.severity == 'critical' -%}
    {% set icon_unicode = '\u274C\u274C' %}
    {%- elif labels.severity == 'error' -%}
    {% set icon_unicode = '\u274C' %}
    {%- elif labels.severity == 'warning' -%}
    {% set icon_unicode = '\u26A0' %}
    {%- elif labels.severity == 'info' -%}
    {% set icon_unicode = '\u2139' %}
    {%- endif -%}
    {{ icon_unicode }} *{{ labels.alertname }} - {{ status | title }}* (Origin: _{{ origin }}_)
    ```
    {% for key, value in annotations.items() -%}
    {{ key | title }}: {{ value }}
    {% endfor -%}
    ```

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 65534

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
extraLabels: {}

metrics:
  # Enable metrics
  enabled: false

  # Create ServiceMonitor
  serviceMonitor:

    # Enable or not the serviceMonitor.
    enabled: false
    # namespace: ""
    interval: 30s
    # scrapeTimeout: 30s
    # relabellings:
    honorLabels: false
    additionalLabels: {}